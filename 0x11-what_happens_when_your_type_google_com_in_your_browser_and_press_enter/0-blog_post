This question is a classic and still widely used interview question for many types of software engineering position. It is used toassess a candidateâ€™s general knowledge of how the web stack works on top of the internet.

Ever wondered how you type in a URL in your favourite web browser, you click the enter button, then BOOOOOMMM... in miliseconds you get servered your result? I am very sure you wanna know the how and why?
Today, we will learn the how and why what on what happenes behind the curtains.

Here is a brief on what we will discuss...
A Client type in a URL in a browser. Browser looks up IP address for the domain. Browser create TCP connection with the server. Browser sends the HTTP request to the server. Server processes request and sends response back to the client.

Now you have an idea, lets go.
So, when i type https://www.google.com in my favourite browser(Brave) and hit click on enter, it amazingly goes somewhere we believe, but where exacly? there few processes involved to get to the destination we typed.

DNS request
-----------
In between the time your browser loads(the small circle in the top right corner of your browser), the browser needs to understand what you have just entered. Kapaichumarimarichopaco. i know some of us have given up on pronouncing that already. this word is popular slang always mentioned in songs by a nigerian singer Zlatan ibile. others misinterpreted the word for "the pant many many to pack". people were asking what it meant, but they found no answers, untill Ibile himself actually explained what it meant..

I want you to think of Ibile as a DNS server. he has the the meaningfull encoding for that word. And so, computers only understand Numbers, series of numbers in this case called an IP address(internet protocol).
Resolved Domain and sub domain names are stored in a cache memory as IP, pronounced as [CASH], until today i knew that, I used to think of it as cake(my bad), Thank God for this writing.
The browser checks if it has the saved IP in cache memory, else, it checks the OS cache memory. as you can see, it take a few millisec to do that. cache memory will be like.. since you will check in this site again in the future, let me keep you few details to hasting the process next time.
If the browswer still dosent find the IP, it sends a request to The DNS(DOMAIN NAME SYSTEM) server.
Now the browser sends the request to the Internet Service Provider(ISP). 

First, the root server will take the request and direct it to the top level domain (.com in this case.) Then the request is forwarded to the root server for the root domain name (google.com) which is then forwarded to the authoritative name server which is registered when the domain is purchased. The DNS record is read and the IP address is returned. There are several types of DNS records: A records and CNAME records. The A record refers directly to an IP address, whereas a CNAME record will refer to another CNAME or A record but not an IP address. A record also states how long the IP can remain in the cache.

TCP/IP
------
The DNS will route your request to the correct IP address using transmission control protocol. The TCP/IP model is the default method of data communication on the internet. TCP means Transmission Control Protocol and IP is Internet Protocol. TCP connections are established using a process called the TCP/IP three-way handshake. This is a three step process where the client and the web server exchange synchronize and acknowledge messages to establish a connection. In a nutshell, it is an end-to-end communication of how data should be made into packets, addressed, transmitted, routed, and received. This allows all data to be standardized so different computers can still interact with each other.

WEB SERVER
-----------
You must probably be thinking, what is this web server, a brief overview.. A web server is a computer that runs websites. It's a computer program that distributes web pages as they are requisitioned. The web server provides the information needed to display the web page. However, it can only translate the files that do not need to be compiled or processed. These files include text, images, HTML, and CSS.

If there are files that need further processing or compilation, the application server must translate and compile these files into HTML, which can then be sent to the web server to relay to the web browser.



